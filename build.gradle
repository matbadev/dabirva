// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext {
        // Java environment
        JAVA_VERSION = JavaVersion.VERSION_11

        // Kotlin environment
        KOTLIN_TARGET_VERSION = "1.8.22"
        KOTLIN_MIN_VERSION_BASE = "1.4"
        KOTLIN_MIN_VERSION = "$KOTLIN_MIN_VERSION_BASE.32"
        KOTLIN_ADDITIONAL_COMPILER_ARGS = [
                "-language-version=$KOTLIN_MIN_VERSION_BASE",
                "-api-version=$KOTLIN_MIN_VERSION_BASE"
        ]
        KOTLIN_COMPATIBILITY_VALIDATOR_VERSION = "0.13.2"

        // Android environment
        ANDROID_PLUGIN_VERSION = "8.0.2"
        ANDROID_TARGET_VERSION = 33
        ANDROID_MIN_VERSION = 21

        // Main dependencies
        ANDROID_CORE_VERSION = "1.10.1"
        APP_COMPAT_VERSION = "1.6.1"
        RECYCLER_VIEW_VERSION = "1.3.0"
        TIMBER_VERSION = "5.0.1"

        // Test dependencies
        JACOCO_VERSION = "0.8.10"
        JUNIT_5_VERSION = "5.9.3"
        JUNIT_5_PLUGIN_VERSION = "1.9.3.0"
        JUNIT_KTX_VERSION = "1.1.5"
        ESPRESSO_VERSION = "3.5.1"
        MOCKITO_VERSION = "5.4.0"
    }
}

plugins {
    id "org.jetbrains.kotlin.android" version "$KOTLIN_TARGET_VERSION" apply false
    id "org.jetbrains.kotlin.kapt" version "$KOTLIN_TARGET_VERSION" apply false
    id "org.jetbrains.kotlin.plugin.parcelize" version "$KOTLIN_TARGET_VERSION" apply false
    id "org.jetbrains.kotlinx.binary-compatibility-validator" version "$KOTLIN_COMPATIBILITY_VALIDATOR_VERSION"

    id "com.android.application" version "$ANDROID_PLUGIN_VERSION" apply false
    id "com.android.library" version "$ANDROID_PLUGIN_VERSION" apply false

    id "de.mannodermaus.android-junit5" version "$JUNIT_5_PLUGIN_VERSION" apply false

    id "jacoco"
    id "signing"
    id "maven-publish"
}

jacoco {
    toolVersion = JACOCO_VERSION
}

// Task name is used as report file name and that must correspond to a pattern recognized by codecov-bash:
// https://github.com/codecov/codecov-bash/blob/master/codecov
task jacocoMergedReportDebug(type: JacocoReport) {
    group = "reporting"
    description = "Collect Jacoco coverage data of dabirva and example module into a single report"

    reports {
        html.required = false
        xml.required = true
        csv.required = false
    }

    sourceDirectories.setFrom fileTree(dir: projectDir, includes: [
            "dabirva/src/main/java/**/*",
    ])
    classDirectories.setFrom fileTree(dir: projectDir, includes: [
            "dabirva/build/tmp/kotlin-classes/debug/**/*",
    ])
    executionData.setFrom fileTree(dir: projectDir, includes: [
            // Unit tests coverage
            "dabirva/build/outputs/**/*.exec",
            "example/build/outputs/**/*.exec",
            // Instrumented tests coverage
            "dabirva/build/outputs/**/*.ec",
            "example/build/outputs/**/*.ec",
    ])
}
