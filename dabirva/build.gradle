plugins {
    id "com.android.library"
    id "org.jetbrains.kotlin.android"
    id "org.jetbrains.kotlin.kapt"
    id "jacoco"
    id "signing"
    id "maven-publish"
}

ext {
    GROUP_ID = "com.matbadev.dabirva"
    ARTIFACT_ID = "dabirva"
    VERSION_NAME = "1.2.0-SNAPSHOT"
    SNAPSHOT_BUILD = VERSION_NAME.endsWith("-SNAPSHOT")
}

jacoco {
    toolVersion = JACOCO_VERSION
}

kotlin {
    jvmToolchain(JAVA_TARGET_VERSION.majorVersion.toInteger())
}

android {
    namespace "com.matbadev.dabirva"
    compileSdk ANDROID_TARGET_VERSION

    defaultConfig {
        minSdkVersion ANDROID_MIN_VERSION
        targetSdkVersion ANDROID_TARGET_VERSION
        versionName VERSION_NAME
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            testCoverageEnabled project.hasProperty("coverage")
        }

        release {
            minifyEnabled false
            testCoverageEnabled false
        }
    }

    buildFeatures {
        buildConfig true
        dataBinding true
    }

    compileOptions {
        sourceCompatibility JAVA_MIN_VERSION
        targetCompatibility JAVA_MIN_VERSION
    }

    kotlinOptions {
        jvmTarget = "$JAVA_MIN_VERSION"
        languageVersion = KOTLIN_MIN_VERSION_BASE
        apiVersion = KOTLIN_MIN_VERSION_BASE
    }

    packagingOptions {
        exclude "META-INF/LICENSE*"
    }

    testOptions {
        // Save instrumented test results to same directory as unit test results
        resultsDir "${layout.buildDirectory}/test-results"
    }

    // See: https://developer.android.com/reference/tools/gradle-api/4.1/com/android/build/api/dsl/LintOptions
    lintOptions {
        abortOnError true
        warningsAsErrors false
        textReport false
        xmlReport true
        htmlReport false
    }

    publishing {
        singleVariant("release") {
            withSourcesJar()
            withJavadocJar()
        }
    }
}

dependencies {
    api "androidx.recyclerview:recyclerview:$RECYCLER_VIEW_VERSION"

    // Unit tests
    testImplementation "junit:junit:$JUNIT_4_VERSION"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$KOTLIN_TARGET_VERSION"
    testImplementation "androidx.test.ext:junit-ktx:$JUNIT_KTX_VERSION"
    testImplementation "org.mockito:mockito-android:$MOCKITO_VERSION"

    // Android tests
    androidTestImplementation "org.jetbrains.kotlin:kotlin-test-junit:$KOTLIN_TARGET_VERSION"
    androidTestImplementation "androidx.test.ext:junit-ktx:$JUNIT_KTX_VERSION"
    androidTestImplementation "androidx.test.espresso:espresso-core:$ESPRESSO_VERSION"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$ESPRESSO_VERSION"
    androidTestImplementation "org.mockito:mockito-android:$MOCKITO_VERSION"
}

afterEvaluate {
    publishing {
        publications {
            maven(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // Basic details for the generated POM.
                groupId GROUP_ID
                artifactId ARTIFACT_ID
                version VERSION_NAME

                // Metadata for the generated POM.
                pom {
                    name = "Dabirva"
                    description = "Data Binding RecyclerView Adapter for Android"
                    url = "https://github.com/matbadev/dabirva"
                    packaging = "aar"

                    licenses {
                        license {
                            name = "The Apache License, Version 2.0"
                            url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                        }
                    }

                    developers {
                        developer {
                            id = "matbadev"
                            name = "Matthias BÃ¤uerle"
                            url = "https://www.matbadev.com/"
                        }
                    }

                    scm {
                        url = "https://github.com/matbadev/dabirva"
                        connection = "scm:git:git://github.com/matbadev/dabirva.git"
                        developerConnection = "scm:git:ssh://github.com:matbadev/dabirva.git"
                    }
                }
            }
        }

        repositories {
            maven {
                name = "centralS01Snapshots"
                url = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
                credentials {
                    username = findProperty("publishing.central.s01.username")
                    password = findProperty("publishing.central.s01.password")
                }
            }

            maven {
                name = "centralS01Staging"
                url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                credentials {
                    username = findProperty("publishing.central.s01.username")
                    password = findProperty("publishing.central.s01.password")
                }
            }
        }
    }

    signing {
        required { !SNAPSHOT_BUILD }
        sign publishing.publications.maven
    }
}

tasks.withType(Sign).configureEach {
    onlyIf { !SNAPSHOT_BUILD }
}
