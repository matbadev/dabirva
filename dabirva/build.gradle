plugins {
    id "com.android.library"
    id "kotlin-android"
    id "kotlin-kapt"
    id "de.mannodermaus.android-junit5"
    id "jacoco"
}

jacoco {
    toolVersion = "0.8.6"
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 10000
        versionName "1.0.0-alpha1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            testCoverageEnabled true
        }
    }

    // CI should run tests in release build type but when working in Android Studio debug should be selected
    testBuildType = project.hasProperty("ci") ? "release" : "debug"

    buildFeatures {
        dataBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    packagingOptions {
        exclude("META-INF/LICENSE*")
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    api "androidx.recyclerview:recyclerview:1.1.0"

    // Unit tests
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.7.0"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.7.0"

    // Android tests
    androidTestImplementation "androidx.test.ext:junit:1.1.2"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.3.0"
    androidTestImplementation "org.mockito:mockito-android:3.7.7"
}

//task mergeTestReports(type: JacocoReport, dependsOn: ["jacocoTestReportRelease", "connectedReleaseAndroidTest"]) {
task mergeTestReports(type: JacocoReport) {
    reports {
        xml.enabled = true
        html.enabled = true
        csv.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/tmp/kotlin-classes/", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    print(mainSrc)
    sourceDirectories.from(mainSrc)
    classDirectories.from(debugTree)
    executionData.from(fileTree(dir: "$buildDir", includes: [
            "${buildDir}/jacoco/testReleaseUnitTest.exec",
            "${buildDir}/outputs/code_coverage/releaseAndroidTest/connected/*coverage.ec"
    ]))
}

task mergeJacocoReport(type: org.gradle.testing.jacoco.tasks.JacocoMerge) {
    group "Jacoco Report"
    description "Merge Jacoco Code Coverage Report"

    def executionFiles = fileTree(dir: "$buildDir", includes: [
            "jacoco/testReleaseUnitTest.exec",
            "outputs/code_coverage/releaseAndroidTest/connected/*coverage.ec"
    ])

    setExecutionData(executionFiles)
}

task newMergeTestReports(type: JacocoReport) {
    reports {
        xml.enabled = true
        html.enabled = true
        csv.enabled = true
    }
    def executionFiles = fileTree(dir: "$buildDir", includes: [
            "jacoco/testReleaseUnitTest.exec",
            "outputs/code_coverage/releaseAndroidTest/connected/*coverage.ec"
    ])

    executionData.setFrom(executionFiles)
}
